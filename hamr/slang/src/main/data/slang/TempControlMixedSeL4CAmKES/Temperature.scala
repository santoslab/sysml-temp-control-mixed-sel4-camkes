// #Sireum

package slang.TempControlMixedSeL4CAmKES

import org.sireum._
import slang._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

object Temperature {
  def example(): TempControlMixedSeL4CAmKES.Temperature = {
    return TempControlMixedSeL4CAmKES.Temperature(
      degrees = Base_Types.Float_32_example(),
      unit = TempControlMixedSeL4CAmKES.TempUnit.byOrdinal(0).get)
  }

  /** invariant AbsZero
    */
  @strictpure def AbsZero_Invariant(value: TempControlMixedSeL4CAmKES.Temperature): B =
    value.degrees > -459.67f

  /** D-Inv Data Invariant for TempControlMixedSeL4CAmKES.Temperature
    */
  @strictpure def D_Inv_Temperature(value: TempControlMixedSeL4CAmKES.Temperature): B =
    (AbsZero_Invariant(value))

  /** D-Inv-Guard Data Invariant for TempControlMixedSeL4CAmKES.Temperature
    */
  @strictpure def D_Inv_Guard_Temperature(value: Option[TempControlMixedSeL4CAmKES.Temperature]): B =
    value.nonEmpty -->: D_Inv_Temperature(value.get)
}

@datatype class Temperature(
  val degrees: F32,
  val unit: TempControlMixedSeL4CAmKES.TempUnit.Type) {
  @spec def AbsZero = Invariant(
    degrees > -459.67f
  )
}

object Temperature_Payload {
  def example(): Temperature_Payload = {
    return Temperature_Payload(TempControlMixedSeL4CAmKES.Temperature.example())
  }
}

@datatype class Temperature_Payload(value: TempControlMixedSeL4CAmKES.Temperature) extends art.DataContent
