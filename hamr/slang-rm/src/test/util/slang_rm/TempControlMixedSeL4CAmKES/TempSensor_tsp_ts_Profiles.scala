// #Sireum

package slang_rm.TempControlMixedSeL4CAmKES

import org.sireum._
import slang_rm.util.Profile
import slang_rm.util.EmptyContainer
import slang_rm.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@msig trait TempSensor_tsp_ts_Profile_Trait extends Profile

@record class TempSensor_tsp_ts_Profile (
  val name: String,
) extends TempSensor_tsp_ts_Profile_Trait {

  override def next: EmptyContainer = {
    return EmptyContainer()
  }
}

// Profile with generators for incoming ports
@msig trait TempSensor_tsp_ts_Profile_P_Trait extends Profile {
}

@record class TempSensor_tsp_ts_Profile_P(
  val name: String,
  ) extends TempSensor_tsp_ts_Profile_P_Trait {

  override def next: TempSensor_tsp_ts_PreState_Container_P = {
    return (TempSensor_tsp_ts_PreState_Container_P (
      ))
  }
}

// Profile with generators for state variables and incoming ports
@msig trait TempSensor_tsp_ts_Profile_PS_Trait extends TempSensor_tsp_ts_Profile_P_Trait {
}

@record class TempSensor_tsp_ts_Profile_PS(
  val name: String,
  ) extends TempSensor_tsp_ts_Profile_PS_Trait {

  override def next: TempSensor_tsp_ts_PreState_Container_PS = {
    return (TempSensor_tsp_ts_PreState_Container_PS (
      ))
  }
}
