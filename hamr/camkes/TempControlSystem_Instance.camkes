// Do not edit this file as it will be overwritten if HAMR codegen is rerun

import <std_connector.camkes>;
import "components/TempSensor_tsp_tst/TempSensor_tsp_tst.camkes";
import "components/TempControl_tcp_tct/TempControl_tcp_tct.camkes";
import "components/Fan_fp_ft/Fan_fp_ft.camkes";

assembly {
  composition {
    component TempSensor_tsp_tst tsp_tst;
    component TempControl_tcp_tct tcp_tct;
    component Fan_fp_ft fp_ft;

    connection seL4SharedData conn1(from tsp_tst.sb_currentTemp, to tcp_tct.sb_currentTemp);
    connection seL4Notification conn2(from tsp_tst.sb_tempChanged, to tcp_tct.sb_tempChanged);
    connection seL4SharedData conn3(from tsp_tst.sb_tempChanged_counter, to tcp_tct.sb_tempChanged_counter);
    connection seL4Notification conn4(from tcp_tct.sb_fanCmd_1_notification, to fp_ft.sb_fanCmd_notification);
    connection seL4SharedData conn5(from tcp_tct.sb_fanCmd_queue_1, to fp_ft.sb_fanCmd_queue);
    connection seL4Notification conn6(from fp_ft.sb_fanAck_1_notification, to tcp_tct.sb_fanAck_notification);
    connection seL4SharedData conn7(from fp_ft.sb_fanAck_queue_1, to tcp_tct.sb_fanAck_queue);
    connection seL4Notification conn8(from tsp_tst.sb_self_pacer_tick, to tsp_tst.sb_self_pacer_tock);
  }

  configuration {
    tcp_tct._stack_size = 102400;
    tsp_tst._domain = 3;
    tcp_tct._domain = 2;
    fp_ft._domain = 4;
    tsp_tst.sb_currentTemp_access = "W";
    tcp_tct.sb_currentTemp_access = "R";
    tsp_tst.sb_tempChanged_counter_access = "W";
    tcp_tct.sb_tempChanged_counter_access = "R";
    tcp_tct.sb_fanCmd_queue_1_access = "W";
    fp_ft.sb_fanCmd_queue_access = "R";
    fp_ft.sb_fanAck_queue_1_access = "W";
    tcp_tct.sb_fanAck_queue_access = "R";
  }
}
